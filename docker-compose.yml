version: '3.8'

services:
  # Main Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: antrai-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://antrai_user:${POSTGRES_PASSWORD}@postgres:5432/antrai_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=7d
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - CLOUDINARY_URL=${CLOUDINARY_URL}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - antrai-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: antrai-postgres
    environment:
      - POSTGRES_DB=antrai_db
      - POSTGRES_USER=antrai_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U antrai_user -d antrai_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - antrai-network

  # Redis for job queues and caching
  redis:
    image: redis:7-alpine
    container_name: antrai-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - antrai-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: antrai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - antrai-network

  # Background Job Processor
  worker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: antrai-worker
    command: ["node", "dist/jobs/worker.js"]
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://antrai_user:${POSTGRES_PASSWORD}@postgres:5432/antrai_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - antrai-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  antrai-network:
    driver: bridge


